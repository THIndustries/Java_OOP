package Webinar_03;

public class Cat extends Animal{

    private static int counter;

    public static int getCounter() {
        return counter;
    }

    {
        counter++;
    }



     /*
     Для того чтобы гламотно унаследовать класс, нужно вызвать конструктор из родительского класса, а так как
     конструктор с тремя параметрами - единственный конструктор супер класса, мы пишем конструктор со схожей сигнатурой
     и передаем нужные нам параметры.
      */
    Cat(String name, int maxRun) { //получили три параметра
        super(name, 0, maxRun);//передаем эти три параметра в базовый конструктор
        //я удалил параметр maxSwim для котика, потому что он все равно не умеет плавать, теперь котик при
        //инициализации не будет требовать указывать параметр maxSwim
    }

    @Override
    void swim(int distance) {
        System.out.println(name + " не умеет плавать!");
        /*
Запомни, как мы обращаемся к имени экземпляра класса - мы не используем тут гетер, потому что нам нужно просто имя,
не задействуя логику, которая может присутствовать в гетере, это своего рода оптимизация, поэтому делаем поле name
в родительском классе - protected, чтобы к нему можно было обращаться напрямую из классов-наследников.
         */
    }
}
